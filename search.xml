<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DS4与DS4Windows</title>
    <url>/archives/6e00f407.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/2e/wallhaven-2e37y9.jpg" alt="General 3840x2152 digital digital art artwork fantasy art drawing digital painting futuristic futuristic city cyber cyber city cyberpunk architecture Fantasy Architecture building skyscraper tower spaceship clouds mist landscape sky skyscape neon neon lights lights city lights city cityscape women fantasy girl nature environment concept art"></p>
<p>场景：一直以来我都是用的PS4手柄使用有线的方式连接的PC，但是PS4手柄其实是一个无线手柄，直接蓝牙连接的话又不好使，那么有没有什么办法解决这个问题呢？答案是肯定的。</p>
<a id="more"></a>

<h1 id="名称解释"><a href="#名称解释" class="headerlink" title="名称解释"></a>名称解释</h1><p><strong>DS4——</strong>就是PS4手柄的专用学名。</p>
<p><strong>DS4 tool——</strong>专门将DS4模拟为XBOX手柄的软件，目前版本很多。</p>
<p><strong>DS4 windows——</strong>专门将DS4模拟为XBOX手柄的软件，目前版本很多。</p>
<p>可能有的童鞋会问了，为什么要模拟成XBOX手柄呢，毕竟XBOX和PC都挺”微软“的，所以也就不足为奇了。</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><strong>DS4 tool</strong>：<a href="http://forums.pcsx2.net/attachment.php?aid=49259">http://forums.pcsx2.net/attachment.php?aid=49259</a></p>
<p><strong>DS4 windows 1.4.X版本</strong>：<a href="http://ds4windows.com/">http://ds4windows.com/</a></p>
<p><strong>DS4 windows 2.0.X版本</strong>：<a href="https://www.filehorse.com/download-ds4windows/">https://www.filehorse.com/download-ds4windows/</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>打开软件后首先会安装驱动，安装完成后即可进行使用。</p>
<p>按住手柄的“PS键”和“share键”，5秒，直到LED，亮白灯，狂闪</p>
<p>在电脑上使用蓝牙配对好手柄，配对码0000，四个零，之后手柄就能正常工作了</p>
<p><strong>DS4 tool</strong></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2020/01/26/bxpRm9VD4NKziPW.png" alt="image.png"></p>
<p><strong>DS4 windows</strong></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2020/01/26/fm5ZObUqzpAgc8i.png" alt="image.png"></p>
<h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p><strong>DS4 tool</strong>和<strong>DS4 windows</strong>的区别就是虽然两款都能使用 ，但是后者的功能更多，可以调整手柄灯光和映射按键等丰富的功能</p>
<p><strong>DS4 windows 2.0.X</strong>其实是2019年12月25日才发布的新版本，和1.4.X版本的升级版。</p>
<p>但是不知道是什么原因我使用1.4.X版本的时候经常出现蓝牙已经连接，但是软件中识别不到设备的问题，使用2.0.X版本的就可以正常使用。</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>DS4</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次https页面插入iframe遇到的问题</title>
    <url>/archives/497c.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/6q/wallhaven-6qy227.jpg" alt="People 2048x1350 women women with glasses sunglasses choker blonde neon face portrait"></p>
<a id="more"></a>

<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>这两天折腾博客，在文章尾部通过iframe嵌入实现打赏功能（<a href="https://github.com/TinyJay/donate-page">打赏源码</a>），在本地测试的时候的可以正常显示的，结果今天发现线上显示出了问题，iframe嵌入的部分显示一片空白。</p>
<p>仔细研究发现，由于博客是https协议的，而iframe嵌入的链接是http协议的，所以浏览器就认为这个是不安全链接就给拦截了，如图所示：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/23/mcU9yx5P2Ewnfq1.png" alt="image.png"></p>
<p>虽然说点击加载不安全的脚本即可正常显示，但是这样却大大降低了用户体验，所以今天必须解决这个问题！</p>
<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>由于显示异常是因为协议不一致导致的，所以要么取消博客的ssl证书，要么把iframe嵌入的链接也变成https的。</p>
<p>第一个办法就是通过nginx配置ssl证书实现https，首先遇到的问题就是先要有SSL证书，证书可以通过阿里云的服务或者第三方服务购买，然后进行一系列后续的操作进行设置方可以实现。（具体发放自行百度，这里不在阐述）</p>
<h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用一个https服务器重定向http来代替直接使用不安全的URL设置其location属性，也可以实现正常的加载。</p>
<p>如：<a href="https://www.cracking.com.ar/redir/redir.php?URL=http://106.12.185.172/donate/">https://www.cracking.com.ar/redir/redir.php?URL=http://106.12.185.172/donate/</a></p>
<h1 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h1><p>如果你的网站同时准备了 https 资源和 http 资源，那么，可以使用相对协议可以帮助你实现当网站引入的都是 http 资源，网站域名更换为 https 后的无缝切换。<br>具体使用方法为：<code>iframe src=&quot;//106.12.185.172/donate&quot; &gt;&lt;/iframe&gt;</code>简而言之，就是将URL的协议（http、https）去掉，只保留//及后面的内容。这样，在使用https的网站中，浏览器会通过https请求URL，否则就通过http发送请求。</p>
<h1 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h1><p>直接把赞赏的源码放到hexo博客的source目录下，然后iframe 设置为<code>iframe src=&quot;https://guaini.blog/donate&quot; &gt;&lt;/iframe&gt;</code>，并在站点的配置文件_config.yml中进行如下设置：<code>skip_render: donate/*</code>，即对donate文件夹下的全部文件不进行渲染。</p>
]]></content>
      <categories>
        <category>坑</category>
      </categories>
      <tags>
        <tag>疑难问题</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之文章链接持久化</title>
    <url>/archives/106054ca.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/d5/wallhaven-d59263.jpg" alt="General 1920x1080 cyberpunk science fiction neon"></p>
<p>场景：由于hexo 默认的链接是 <code>http://xxx.yy.com/2019/12/22/hello-world</code> 这种类型的，这源于站点目录下的配置 <code>_config.yml</code> 里的配置 <code>:permalink: :year/:month/:day/:title/</code>，这种默认配置的缺点就是一般文件名是中文，导致 url 链接里有中文出现，这会造成很多问题，如文末的版权声明会很臃肿不美观，也不利于 SEO。</p>
<a id="more"></a>

<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/22/4Z5UO1sbt6KpeSN.png" alt="image.png"></p>
<p><code>hexo-abbrlink</code>插件很好的解决了这个问题，它会自动根据文章时间点生成最终博客文章链接，后期不管怎么修改文章永久链接都不会再变。同时文章链接层级更短，使得博客文章更利于SEO。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在站点根目录使用 <code>git bash</code> 执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span></pre></td></tr></table></figure>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>打开根目录下的 <code>_config.yml</code> 文件，搜索permalink，注释掉之前的设置，修改为如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line"># permalink_defaults:</span></pre></td></tr><tr><td class="code"><pre><span class="line">permalink: posts&#x2F;:abbrlink.html</span></pre></td></tr><tr><td class="code"><pre><span class="line">abbrlink:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  alg: crc32  # 算法：crc16(default) and crc32</span></pre></td></tr><tr><td class="code"><pre><span class="line">  rep: hex    # 进制：dec(default) and hex</span></pre></td></tr></table></figure>

<h1 id="样品"><a href="#样品" class="headerlink" title="样品"></a>样品</h1><p>算法和进制设置不同的话会有不同的效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crc16 &amp; hex</span></pre></td></tr><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;66c8.html</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">crc16 &amp; dec</span></pre></td></tr><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;65535.html</span></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crc32 &amp; hex</span></pre></td></tr><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;8ddf18fb.html</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">crc32 &amp; dec</span></pre></td></tr><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;1690090958.html</span></pre></td></tr></table></figure>

<h1 id="局限"><a href="#局限" class="headerlink" title="局限"></a>局限</h1><p>由于crc16的最大帖子数是65535。（对于个人博客网站，此数字可能不错）</p>
<h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>接下来重新部署三连，可以看到我们的文章路径变成了 <code>/posts/xxxxx.html</code>，接下来就算我们将文字标题命名为中文也没问题了。</p>
<h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><ul>
<li><a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></li>
<li><a href="https://ai.xgoogle.xyz/archives/52ccf080.html">https://ai.xgoogle.xyz/archives/52ccf080.html</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP获取访客ip、地址、系统、浏览器等信息</title>
    <url>/archives/570b17ef.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/j5/wallhaven-j5yloy.jpg" alt="General 2560x1440 digital digital art artwork Photoshop edit neon lights neon lights city cityscape building architecture people water reflection alone loneliness silhouette photography umbrella cold landscape mist winter Photorealism women outdoors street"></p>
<a id="more"></a>

<h1 id="获取访客的IP和地址"><a href="#获取访客的IP和地址" class="headerlink" title="获取访客的IP和地址"></a>获取访客的IP和地址</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$url=<span class="string">"http://ip-api.com/json/?lang=zh-CN"</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">$UserAgent = <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">$curl = curl_init(); </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_URL, $url); </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_HEADER, <span class="number">0</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_ENCODING, <span class="string">''</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_USERAGENT, $UserAgent);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">curl_setopt($curl, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">$data = curl_exec($curl);</span></pre></td></tr><tr><td class="code"><pre><span class="line">$data = json_decode($data, <span class="keyword">true</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">$country = $data[<span class="string">'country'</span>]; </span></pre></td></tr><tr><td class="code"><pre><span class="line">$region = $data[<span class="string">'regionName'</span>]; </span></pre></td></tr><tr><td class="code"><pre><span class="line">$city = $data[<span class="string">'city'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">$ip = $data[<span class="string">'query'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'来自'</span>.$country.<span class="string">'-'</span>.$region.<span class="string">'-'</span>.$city.<span class="string">'的朋友'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'IP是:'</span>.$ip;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

<h1 id="获取浏览器信息"><a href="#获取浏览器信息" class="headerlink" title="获取浏览器信息"></a>获取浏览器信息</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_bro</span><span class="params">()</span></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">     $sys = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];  <span class="comment">//获取用户代理字符串  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="keyword">if</span> (stripos($sys, <span class="string">"Firefox/"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         preg_match(<span class="string">"/Firefox\/([^;)]+)+/i"</span>, $sys, $b);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"Firefox"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $b[<span class="number">1</span>];  <span class="comment">//获取火狐浏览器的版本号  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span> (stripos($sys, <span class="string">"Maxthon"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         preg_match(<span class="string">"/Maxthon\/([\d\.]+)/"</span>, $sys, $aoyou);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"傲游"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $aoyou[<span class="number">1</span>];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span> (stripos($sys, <span class="string">"MSIE"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         preg_match(<span class="string">"/MSIE\s+([^;)]+)+/i"</span>, $sys, $ie);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"IE"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $ie[<span class="number">1</span>];  <span class="comment">//获取IE的版本号  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span> (stripos($sys, <span class="string">"OPR"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">             preg_match(<span class="string">"/OPR\/([\d\.]+)/"</span>, $sys, $opera);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"Opera"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $opera[<span class="number">1</span>];    </span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span>(stripos($sys, <span class="string">"Edge"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         <span class="comment">//win10 Edge浏览器 添加了chrome内核标记 在判断Chrome之前匹配  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">         preg_match(<span class="string">"/Edge\/([\d\.]+)/"</span>, $sys, $Edge);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"Edge"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $Edge[<span class="number">1</span>];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span> (stripos($sys, <span class="string">"Chrome"</span>) &gt; <span class="number">0</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">             preg_match(<span class="string">"/Chrome\/([\d\.]+)/"</span>, $sys, $google);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">0</span>] = <span class="string">"Chrome"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $google[<span class="number">1</span>];  <span class="comment">//获取google chrome的版本号  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125; <span class="keyword">elseif</span>(stripos($sys,<span class="string">'rv:'</span>)&gt;<span class="number">0</span> &amp;&amp; stripos($sys,<span class="string">'Gecko'</span>)&gt;<span class="number">0</span>)&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         preg_match(<span class="string">"/rv:([\d\.]+)/"</span>, $sys, $IE);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">             $exp[<span class="number">0</span>] = <span class="string">"IE"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">         $exp[<span class="number">1</span>] = $IE[<span class="number">1</span>];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125;<span class="keyword">else</span> &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        $exp[<span class="number">0</span>] = <span class="string">"未知浏览器"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        $exp[<span class="number">1</span>] = <span class="string">""</span>;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="keyword">return</span> $exp[<span class="number">0</span>].<span class="string">'('</span>.$exp[<span class="number">1</span>].<span class="string">')'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

<h1 id="获取操作系统信息"><a href="#获取操作系统信息" class="headerlink" title="获取操作系统信息"></a>获取操作系统信息</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_os</span><span class="params">()</span></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">$agent = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    $os = <span class="keyword">false</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; strpos($agent, <span class="string">'95'</span>))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 95'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win 9x/i'</span>, $agent) &amp;&amp; strpos($agent, <span class="string">'4.90'</span>))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows ME'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/98/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 98'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 6.0/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows Vista'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 6.1/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 7'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 6.2/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 8'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 10.0/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 10'</span>;<span class="comment">#添加win10判断  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 5.1/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows XP'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt 5/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 2000'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/nt/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows NT'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/win/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/32/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Windows 32'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/linux/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Linux'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      		<span class="keyword">if</span> ( preg_match( <span class="string">'/Android.([0-9. _]+)/i'</span>, $agent, $matches ) ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			$os = <span class="string">'Android'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">elseif</span> ( preg_match( <span class="string">'#Ubuntu#i'</span>, $agent ) ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			$os = <span class="string">'Ubuntu'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">elseif</span> ( preg_match( <span class="string">'#Debian#i'</span>, $agent ) ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			$os = <span class="string">'Debian'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">elseif</span> ( preg_match( <span class="string">'#Fedora#i'</span>, $agent ) ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			$os = <span class="string">'Fedora'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/unix/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Unix'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/sun/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/os/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'SunOS'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ibm/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/os/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'IBM OS/2'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/Mac/i'</span>, $agent) &amp;&amp; preg_match(<span class="string">'/PC/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'Macintosh'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/PowerPC/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'PowerPC'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/AIX/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'AIX'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/HPUX/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'HPUX'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/NetBSD/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'NetBSD'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/BSD/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'BSD'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/OSF1/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'OSF1'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/IRIX/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'IRIX'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/FreeBSD/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'FreeBSD'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/teleport/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'teleport'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/flashget/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'flashget'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/webzip/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'webzip'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/offline/i'</span>, $agent))  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'offline'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">      $os = <span class="string">'未知操作系统'</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> $os;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Windows和Linux 下安装部署 PHP 开发环境</title>
    <url>/archives/19594.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/dg/wallhaven-dgow5j.jpg" alt="General 1920x1080 bed sunset digital art cityscape city building window neon drawing RicoDZ"></p>
<p>PHP是世界上最好的语言！！！</p>
<a id="more"></a>

<p>对于php开发初学者来说搭建一个php运行坏境是一个非常繁琐的事情，好在很多公司开发了一键搭建php安装环境，一键进行php环境配置。如：phpStudy 和 XAMPP等集成工具，这里拿XAMPP进行介绍。</p>
<h1 id="在Windows上搭建"><a href="#在Windows上搭建" class="headerlink" title="在Windows上搭建"></a>在Windows上搭建</h1><p>访问XAMPP官网：<a href="https://www.apachefriends.org/zh_cn/index.html">https://www.apachefriends.org/zh_cn/index.html</a>，选择 XAMPP for Windows，页面跳转后开始下载（如果下载缓慢的挂可以进行翻墙）。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/OHWVCmsi5zfTKpP.png" alt="image.png"></p>
<p>下载完成后双击下载的exe文件进行安装，无脑下一步即可。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/iaqZWXFVDfdp4nT.png" alt="image.png"></p>
<p>安装完成后打开管理窗口，点击Apache和MySQL的Start按钮进行启动，如果之前本地已经安装过MySQL的话可以使用之前的。</p>
<ul>
<li>如果之前没安装过MySQL的话，可以直接启动</li>
<li>如果之前安装过MySQL，不想用之前的，可以点击MySQL的Config更改端口后进行启动</li>
<li>如果之前安装过MySQL，想用之前的MySQL的话，可以修改<code>XAMPP\phpMyAdmin\config.inc.php</code>文件中的MySQL密码即可。<br><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/nXRzJ4axyCWiObl.png" alt="image.png">)<img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/SOkBP5lHtZCzTb7.png" alt="image.png"></li>
</ul>
<p>在浏览器中访问 <a href="http://localhost">http://localhost</a> ，显示如下页面的话表示环境安装成功！</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/uV2ZhUDkMyg9SRG.png" alt="image.png"></p>
<h1 id="在Linux上搭建"><a href="#在Linux上搭建" class="headerlink" title="在Linux上搭建"></a>在Linux上搭建</h1><p>同样访问XAMPP官网：<a href="https://www.apachefriends.org/zh_cn/index.html，选择XAMPP">https://www.apachefriends.org/zh_cn/index.html，选择XAMPP</a> for Linux进行下载：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/pzrtOuA89bBFlXP.png" alt="image.png"></p>
<p>下载完成后上传到Linux服务器，安装前，需要先给xampp安装包可执行的权限。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># chmod 777 xampp-linux-x64-7.3.12-0-installer.run</span></pre></td></tr></table></figure>

<p>运行<code>./xampp-linux-x64-7.3.12-0-installer.run</code>进行安装操作，根据提示进行选择需要安装的部分即可：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/18/hH3sCv6xEDWSbng.png" alt="image.png"></p>
<p>至此，安装步骤就已经完成了 。</p>
<p>启动xampp：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;opt&#x2F;lampp&#x2F;lampp start</span></pre></td></tr></table></figure>

<p>停止xampp：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;opt&#x2F;lampp&#x2F;lampp stop</span></pre></td></tr></table></figure>

<p>卸载xampp：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># rm -rf &#x2F;opt&#x2F;lampp</span></pre></td></tr></table></figure>

<h2 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h2><p>在默认的安装过程中，xampp所有均是没有密码的，为了安全，我们应该为xampp设置密码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;opt&#x2F;lampp&#x2F;lampp security</span></pre></td></tr></table></figure>

<ul>
<li>设置phpMyAdmin的密码：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XAMPP:  The MySQL&#x2F;phpMyAdmin user pma has no password set!!! </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Do you want to set a password? [yes] yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password: </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password (again): </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Setting new MySQL pma password.</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Setting phpMyAdmin&#39;s pma password to the new one.</span></pre></td></tr></table></figure>

<ul>
<li>设置mysql的root账户：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XAMPP:  MySQL has no root passwort set!!! </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Do you want to set a password? [yes] yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Write the password somewhere down to make sure you won&#39;t forget it!!! </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password: </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password (again): </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Setting new MySQL root password.</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Change phpMyAdmin&#39;s authentication method.</span></pre></td></tr></table></figure>

<ul>
<li>设置ftp密码：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XAMPP:  The FTP password for user &#39;daemon&#39; is still set to &#39;xampp&#39;. </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Do you want to change the password? [yes] yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password: </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Password (again): </span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP: Reload ProFTPD...ok.</span></pre></td></tr><tr><td class="code"><pre><span class="line">XAMPP:  Done.</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之提交百度、谷歌搜索引擎收录</title>
    <url>/archives/55894.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/95/wallhaven-957odx.jpg" alt="People 2048x1319 women blonde portrait neon sunglasses reflection"></p>
<a id="more"></a>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一个网站的SEO对一个网站非常重要，<a href="https://baike.baidu.com/item/SEO/102990">SEO</a>指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和Google这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。</p>
<h1 id="查看网站是否被收录"><a href="#查看网站是否被收录" class="headerlink" title="查看网站是否被收录"></a>查看网站是否被收录</h1><p>首先我们可以输入 <code>site:域名</code> 来查看域名是否被搜索引擎收录，如下图所示，表示百度已经收录，谷歌还没收录：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/knEurzDNM1Qvi8H.png" alt="image.png"></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/xQb5JUtf8SOh9Ci.png" alt="image.png"></p>
<h1 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h1><p>站点地图即<a href="https://baike.baidu.com/item/sitemap/6241567?fr=aladdin">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p>
<p>使用以下命令生成一个网站地图：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span></pre></td></tr></table></figure>

<p>然后使用命令 <code>hexo g -d</code> 将网站部署上去，然后访问 <code>你的首页/sitemap.xml</code> 或者 <code>你的首页/baidusitemap.xml</code> 就可以看到网站地图了</p>
<p>其中 <code>sitemap.xml</code> 文件是搜索引擎通用的 sitemap 文件，<code>baidusitemap.xml</code> 是百度专用的 sitemap 文件</p>
<h1 id="提交百度搜索"><a href="#提交百度搜索" class="headerlink" title="提交百度搜索"></a>提交百度搜索</h1><p>访问<a href="https://ziyuan.baidu.com/">百度搜索资源平台官网</a>，注册或者登陆百度账号，依次选择【用户中心】-【站点管理】。</p>
<p>选择添加站点：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/jAgv9DI18LUTE56.png" alt="image.png"></p>
<h2 id="验证站点"><a href="#验证站点" class="headerlink" title="验证站点"></a>验证站点</h2><p>提供三种验证方式：</p>
<p>文件验证：下载给定的文件，将其放到本地主题目录 source 文件夹，然后部署上去完成验证<br>HTML 标签验证：一般是给一个 meta 标签，放到首页 <head> 与 <meta name="generator" content="Hexo 4.0.0"><link rel="alternate" href="/atom.xml" title="怪你過分美麗" type="application/atom+xml">
</head> 标签之间即可完成验证<br>CNAME 验证：个人觉得这种方法最简单，去域名 DNS 添加一个 CNAME 记录即可完成验证</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/cICoTf1pQjw3Z9F.png" alt="image.png"><br>百度提供了自动提交和手动提交两种方式，其中自动提交又分为主动推送、自动推送和 sitemap 三种方式，以下是官方给出的解释：</p>
<p>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录</p>
<p>自动推送：是轻量级链接提交组件，将自动推送的 JS 代码放置在站点每一个页面源代码中，当页面被访问时，页面链接会自动推送给百度，有利于新页面更快被百度发现</p>
<p>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送</p>
<p>手动提交：如果您不想通过程序提交，那么可以采用此种方式，手动将链接提交给百度</p>
<h2 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h2><p>在博客根目录安装插件 <code>npm install hexo-baidu-url-submit --save</code>，然后在根目录 <code>_config.yml</code> 文件里写入以下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  count: 1               # 提交最新的多少个链接</span></pre></td></tr><tr><td class="code"><pre><span class="line">  host: www.guaini.blog    # 在百度站长平台中添加的域名</span></pre></td></tr><tr><td class="code"><pre><span class="line">  token: your_token      # 秘钥</span></pre></td></tr><tr><td class="code"><pre><span class="line">  path: baidu_urls.txt   # 文本文档的地址， 新链接会保存在此文本文档里</span></pre></td></tr></table></figure>

<p>其中的 <code>token</code> 可以在【网站支持】-【链接提交】-【自动提交】-【主动推送】下面看到，接口调用地址最后面 <code>token=xxxxx</code> 即为你的 <code>token</code></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/4lf1E7CoHneIwOS.png" alt="image.png"></p>
<p>同样是在根目录的 <code>_config.yml</code> 文件，大约第 17 行处，url 要改为在百度站长平台添加的域名，也就是你网站的首页地址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># URL</span></pre></td></tr><tr><td class="code"><pre><span class="line">url: http:&#x2F;&#x2F;www.guaini.blog</span></pre></td></tr><tr><td class="code"><pre><span class="line">root: &#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">permalink: :title&#x2F;</span></pre></td></tr></table></figure>

<p>最后，加入新的 deployer：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span></pre></td></tr><tr><td class="code"><pre><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span></pre></td></tr><tr><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  - type: git</span></pre></td></tr><tr><td class="code"><pre><span class="line">    repo: </span></pre></td></tr><tr><td class="code"><pre><span class="line">     github: git@github.com:BruceXiaoWang&#x2F;brucexiaowang.github.io.git</span></pre></td></tr><tr><td class="code"><pre><span class="line">     coding: git@git.dev.tencent.com:brucexiaowang&#x2F;brucexiaowang.git</span></pre></td></tr><tr><td class="code"><pre><span class="line">    branch: master</span></pre></td></tr><tr><td class="code"><pre><span class="line">    message: 更新博客。</span></pre></td></tr><tr><td class="code"><pre><span class="line">  - type: baidu_url_submitter             # 这是新加的主动推送</span></pre></td></tr></table></figure>

<p>最后执行 <code>hexo g -d</code> 部署一遍即可实现主动推送，推送成功的标志是：在执行部署命令最后会显示类似如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;remain&quot;:4999953,&quot;success&quot;:47&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">INFO  Deploy done: baidu_url_submitter</span></pre></td></tr></table></figure>

<p>这表示有 47 个页面已经主动推送成功，remain 的意思是当天剩余的可推送 url 条数</p>
<p>主动推送相关原理介绍：</p>
<ul>
<li><p>新链接的产生：hexo generate 会产生一个文本文件，里面包含最新的链接</p>
</li>
<li><p>新链接的提交：hexo deploy 会从上述文件中读取链接，提交至百度搜索引擎</p>
<p>该插件的 GitHub 地址：<a href="https://github.com/huiwang/hexo-baidu-url-submit">https://github.com/huiwang/hexo-baidu-url-submit</a></p>
</li>
</ul>
<h2 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h2><p>在next主题的配置文件中找到baidu_push，改为true即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></pre></td></tr><tr><td class="code"><pre><span class="line">baidu_push: true</span></pre></td></tr></table></figure>

<h2 id="sitemap提交"><a href="#sitemap提交" class="headerlink" title="sitemap提交"></a>sitemap提交</h2><p>在【网站支持】-【链接提交】-【自动提交】-【主动推送】下面点击si’temap,然后把站点地图的网址输入点击提交即可。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/VeRDFjyhz7ofSBc.png" alt="image.png"></p>
<h2 id="手动提交"><a href="#手动提交" class="headerlink" title="手动提交"></a>手动提交</h2><p>手动提交不需要其他额外操作，直接把需要收录的页面的 url 提交即可，这种方法效率较低，更新较慢，不推荐使用。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/11/8rjaTP4Ks6ikOZ3.png" alt="image.png"></p>
<h1 id="提交谷歌搜索"><a href="#提交谷歌搜索" class="headerlink" title="提交谷歌搜索"></a>提交谷歌搜索</h1><p>进入<a href="https://www.google.com/webmasters/">谷歌站长平台</a>，登录你的谷歌账号之后会让你验证网站所有权：</p>
<p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20190917150709953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzU5MjI0,size_16,color_FFFFFF,t_70" alt="10"></p>
<p>我使用的是网域资源验证方式，只需要一个域名就可以匹配到多种格式的 URL，之后会给你一个 TXT 的记录值，复制它到你域名 DNS 增加一个 TXT 记录，点击验证即可</p>
<p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20190917153115352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzU5MjI0,size_16,color_FFFFFF,t_70" alt="11"></p>
<p>提交谷歌收录比较简单，选择站点地图，将我们之前生成的 sitemap 提交就行了，过几分钟刷新一下看到成功字样表示提交成功！</p>
<p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20190917154001388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzU5MjI0,size_16,color_FFFFFF,t_70" alt="12"></p>
<h1 id="添加-robots-txt"><a href="#添加-robots-txt" class="headerlink" title="添加 robots.txt"></a>添加 robots.txt</h1><p><code>robots.txt</code>是搜索引擎蜘蛛协议，告诉引擎哪些要收录，哪些禁止收录。<br><code>source</code>文件夹下新建 robots.txt，内容如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span></pre></td></tr><tr><td class="code"><pre><span class="line">Allow: &#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Allow: &#x2F;categories&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Allow: &#x2F;tags&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Allow: &#x2F;archives&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Disallow: &#x2F;js&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Disallow: &#x2F;css&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Disallow: &#x2F;fonts&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Disallow: &#x2F;vendors&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Disallow: &#x2F;fancybox&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Sitemap: https:&#x2F;&#x2F;guaini.blog&#x2F;sitemap.xml</span></pre></td></tr><tr><td class="code"><pre><span class="line">Sitemap: https:&#x2F;&#x2F;guaini.blog&#x2F;baidusitemap.xml</span></pre></td></tr></table></figure>



<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><p><a href="https://blog.csdn.net/qq_36759224/article/details/100899489">Hexo 博客提交百度、谷歌搜索引擎收录</a></p>
</li>
<li><p><a href="https://blog.csdn.net/qq_32454537/article/details/79482914">Hexo个人博客站点被百度谷歌收录</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/f8ec422ebd52">Hexo博客提交百度和Google收录</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客美化之安装DaoVoice实现在线聊天功能</title>
    <url>/archives/2426.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/lq/wallhaven-lq38lp.jpg" alt="General 2560x1440 digital art head fantasy art profile hands glowing neon abstract artwork 3d object "></p>
<p>之前逛大佬们的博客发现，发现有个在线聊天功能还不错，于是乎自己也加一个玩玩。</p>
<a id="more"></a>

<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>首先需要注册一个 DaoVoice，<a href="http://dashboard.daovoice.io/get-started?invite_code=7f3d6e70">点击注册</a>。</p>
<p>注册成功后，进入后台控制台，进入到 <code>应用设置--&gt;安装到网站</code> 页面，可以得到一个 <code>app_id</code>：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/09/ef6QWbVyanHUSJ7.png" alt="image.png"></p>
<h1 id="修改head-swig"><a href="#修改head-swig" class="headerlink" title="修改head.swig"></a>修改head.swig</h1><p>修改<code>/themes/next/layout/_partials/head.swig</code>文件，添加内容如下，位置随意，</p>
<p><strong>注意</strong>：’widget.daovoice.io/widget/app_id.js’中js文件名改成自己的id就行。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.daovoice %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">"script"</span>,(<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/app_id.js"</span>,<span class="string">"daovoice"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  daovoice(<span class="string">'init'</span>, &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      app_id: <span class="string">"&#123;&#123;theme.daovoice_app_id&#125;&#125;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  daovoice(<span class="string">'update'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;<span class="regexp">/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span></pre></td></tr></table></figure>

<h1 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h1><p>在主题配置文件 <code>_config.yml</code>，添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Online contact</span></pre></td></tr><tr><td class="code"><pre><span class="line">daovoice: true</span></pre></td></tr><tr><td class="code"><pre><span class="line">daovoice_app_id:   # 这里填你刚才获得的 app_id</span></pre></td></tr></table></figure>

<h1 id="聊天窗口配置"><a href="#聊天窗口配置" class="headerlink" title="聊天窗口配置"></a>聊天窗口配置</h1><p>应用设置–&gt; 聊天设置修改主题，修改图标颜色和位置</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/09/2zLaW4ts3y96dBf.png" alt="image.png"></p>
<h1 id="绑定微信"><a href="#绑定微信" class="headerlink" title="绑定微信"></a>绑定微信</h1><p>最后还可以到右上角选择管理员，微信绑定,可以绑定你的微信号，关注公众号后，就可以实时收发消息，有新的消息也会通过微信通知，设置页面如下：</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/09/oP32lAWi7pOTRSn.png" alt="image.png"></p>
<p>至此，网页的在线联系功能已经完成，重新<code>hexo g</code>，<code>hexo d</code>上传GitHub后，页面上就能看到效果了。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客美化之自定义友链页面</title>
    <url>/archives/13407.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/q6/wallhaven-q6lw8l.jpg" alt="People 2500x1667 Kristina Borodkina cyberpunk long hair straight hair tattoo cyborg couch gun knee high socks black clothing purple pink neon lights skirt blue"></p>
<p>NexT 主题自带的友情链接的位置是在侧栏的 Social Link 中，位置不太明显，而且容量比较小，不美观。因此可以自定义一个特定的页面，单独显示友情链接。</p>
<a id="more"></a>

<h1 id="新增-links-页面："><a href="#新增-links-页面：" class="headerlink" title="新增 links 页面："></a>新增 links 页面：</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">"links"</span></span></pre></td></tr></table></figure>

<p>这样在 <code>~/source/</code> 目录下会生成一个 <code>links</code> 文件夹，打开其中的 <code>index.md</code> 文件，在标题头中写入 <code>type = &quot;links&quot;</code> 这个属性头，如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 友情链接</span></pre></td></tr><tr><td class="code"><pre><span class="line">date: 2019-09-29 13:08:43</span></pre></td></tr><tr><td class="code"><pre><span class="line">type: "links"</span></pre></td></tr></table></figure>

<h1 id="配置-menu"><a href="#配置-menu" class="headerlink" title="配置 menu"></a>配置 menu</h1><p>主题配置文件中<code>menu</code>下添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span> <span class="string">/links/</span> <span class="string">||</span> <span class="string">link</span></span></pre></td></tr></table></figure>

<p>在 <code>/themes/next/languages/zh-Hans.yml</code> 文件中 <code>menu</code> 下增加中文描述</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span> <span class="string">友链</span></span></pre></td></tr></table></figure>

<p>做完这些工作，接下来就是要增加友链页面的样式了</p>
<h1 id="新增-links-swig-页"><a href="#新增-links-swig-页" class="headerlink" title="新增 links.swig 页"></a>新增 links.swig 页</h1><p>首先，在 <code>~/themes/next/layout/</code> 目录下新建一个 <code>links.swig</code> 文件，并写入以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 所在目录：~&#x2F;themes&#x2F;next&#x2F;layout&#x2F; --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;% block content %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;######################&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;###  LINKS BLOCK   ###&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;######################&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;div id&#x3D;&quot;links&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;style&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .links-content&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin-top:1rem;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            </span></pre></td></tr><tr><td class="code"><pre><span class="line">            .link-navigation::after &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                content: &quot; &quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                display: block;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                clear: both;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            </span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                width: 240px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-size: 1rem;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                padding: 10px 20px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-radius: 4px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                transition-duration: 0.15s;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin-bottom: 1rem;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                display:flex;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            @media (max-width: 767px) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                .card:nth-child(odd) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    float: left;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                .card:nth-child(even) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    float: left !important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            </span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card:nth-child(odd) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                float: left;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card:nth-child(even) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                float: right;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card:hover &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                transform: scale(1.1);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card a &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border:none; </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card .ava &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                width: 3rem!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                height: 3rem!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin:0!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin-right: 1em!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-radius:4px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card .card-header &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-style: italic;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                overflow: hidden;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                width: 100%;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card .card-header a &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-style: normal;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color: #2bbc8a;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-weight: bold;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                text-decoration: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card .card-header a:hover &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color: #a166ab;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                text-decoration: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            .card .card-header .info &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-style:normal;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color:#a3a3a3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-size:14px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                min-width: 0;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                overflow: hidden;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                white-space: nowrap;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            span.focus-links &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-style: normal;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin-left: 10px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                position: unset;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                left: 0;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                padding: 0 7px 0 5px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-size: 11px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-color: #42c02e;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-radius: 40px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                line-height: 24px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                height: 22px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color: #fff !important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                background-color: #42c02e;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                display: inline-block;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            span.focus-links:hover&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                background-color: #318024;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            .friends-btn&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                text-align: center;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color: #555!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                background-color: #fff;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-radius: 3px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-size: 15px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                box-shadow: inset 0 0 10px 0 rgba(0,0,0,.35);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border: none!important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                transition-property: unset;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                padding: 0 15px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin: inherit;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            .friends-btn:hover&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                color: rgb(255, 255, 255) !important;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                border-radius: 3px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                font-size: 15px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                margin: inherit;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;&#x2F;style&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;div class&#x3D;&quot;links-content&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;div class&#x3D;&quot;link-navigation&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;% for link in theme.mylinks %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                </span></pre></td></tr><tr><td class="code"><pre><span class="line">                    &lt;div class&#x3D;&quot;card&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;img class&#x3D;&quot;ava&quot; src&#x3D;&quot;&#123;&#123; link.avatar &#125;&#125;&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;div class&#x3D;&quot;card-header&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;div&gt;&lt;a href&#x3D;&quot;&#123;&#123; link.site &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt; &#123;&#123; link.nickname &#125;&#125;&lt;&#x2F;a&gt; &lt;a href&#x3D;&quot;&#123;&#123; link.site &#125;&#125;&quot;&gt;&lt;span class&#x3D;&quot;focus-links&quot;&gt;关注&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;div class&#x3D;&quot;info&quot;&gt;&#123;&#123; link.info &#125;&#125;&lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                </span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;% endfor %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;&#123; page.content &#125;&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;##########################&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;###   END LINKS BLOCK  ###&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;##########################&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;% endblock %&#125;</span></pre></td></tr></table></figure>

<p>其中的样式可以根据个人喜好进行更改。</p>
<h1 id="修改-page-swig"><a href="#修改-page-swig" class="headerlink" title="修改 page.swig"></a>修改 page.swig</h1><p>修改 <code>~/themes/next/layout/page.swig</code> 文件，在如下所示位置处进行添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 友情链接--&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">#&#125;&#123;% elif page.type &#x3D;&#x3D;&#x3D; &#39;links&#39; and not page.title %&#125;&#123;#</span></pre></td></tr><tr><td class="code"><pre><span class="line">  #&#125;&#123;&#123; __(&#39;title.links&#39;) + page_title_suffix &#125;&#125;&#123;#</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/06/Gd72hgF6xIaj8ZE.png" alt="未命名1575567921.png"></p>
<h1 id="引入-links-swig"><a href="#引入-links-swig" class="headerlink" title="引入 links.swig"></a>引入 links.swig</h1><p>在 <code>/themes/next/layout/page.swig</code> 中 <code>PAGE BODY</code> 内部，引入刚才新建的 <code>page.swig</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 友情链接--&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;% elif page.type &#x3D;&#x3D;&#x3D; &#39;links&#39; %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;% include &#39;links.swig&#39; %&#125;</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/12/06/CZsel4HDYB8WdxU.png" alt="image.png"></p>
<h1 id="配置友链"><a href="#配置友链" class="headerlink" title="配置友链"></a>配置友链</h1><p>在主题配置文件 <code>~/themes/next/_config.yml</code> 文件中按照以下格式添加友链</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 友情链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">mylinks:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="attr">nickname:</span> <span class="comment"># 昵称</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">avatar:</span> <span class="comment"># 头像地址</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">site:</span> <span class="comment">#友链地址</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">info:</span> <span class="comment">#相关说明</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="attr">nickname:</span> <span class="comment"># 昵称</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">avatar:</span> <span class="comment"># 头像地址</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">site:</span> <span class="comment">#友链地址</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">info:</span> <span class="comment">#相关说明</span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现定时器的四种方式</title>
    <url>/archives/12995.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/zm/wallhaven-zm5eyy.jpg" alt="General 1920x1200 futuristic cyberpunk artwork vehicle cyan pink"></p>
<p>java中Timer定时器的使用。</p>
<a id="more"></a>

<h2 id="设定2000毫秒后执行"><a href="#设定2000毫秒后执行" class="headerlink" title="设定2000毫秒后执行"></a>设定2000毫秒后执行</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer1</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Timer nTimer = <span class="keyword">new</span> Timer();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    nTimer.schedule(<span class="keyword">new</span> TimerTask() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            System.out.println(<span class="string">"----设定要指定任务-----"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;,<span class="number">2000</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure>

<h2 id="延迟5000毫秒，每1000毫秒执行一次-一"><a href="#延迟5000毫秒，每1000毫秒执行一次-一" class="headerlink" title="延迟5000毫秒，每1000毫秒执行一次(一)"></a>延迟5000毫秒，每1000毫秒执行一次(一)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer2</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Timer timer = <span class="keyword">new</span> Timer();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        timer.schedule(<span class="keyword">new</span> TimerTask() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                System.out.println(<span class="string">"-------延迟5000毫秒，每1000毫秒执行一次--------"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;, <span class="number">5000</span>, <span class="number">1000</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure>

<h2 id="延迟5000毫秒，每1000毫秒执行一次-二"><a href="#延迟5000毫秒，每1000毫秒执行一次-二" class="headerlink" title="延迟5000毫秒，每1000毫秒执行一次(二)"></a>延迟5000毫秒，每1000毫秒执行一次(二)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer3</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Timer timer = <span class="keyword">new</span> Timer();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        timer.scheduleAtFixedRate(<span class="keyword">new</span> TimerTask() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                System.err.println(<span class="string">"-------延迟5000毫秒，每1000毫秒执行一次--------"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;, <span class="number">5000</span>, <span class="number">1000</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure>

<p><strong>区别：</strong></p>
<p>schedule和scheduleAtFixedRate的区别在于，如果指定开始执行的时间在当前系统运行时间之前，scheduleAtFixedRate会把已经过去的时间也作为周期执行，而schedule不会把过去的时间算上。</p>
<h2 id="设置每天9-00执行任务"><a href="#设置每天9-00执行任务" class="headerlink" title="设置每天9:00执行任务"></a>设置每天9:00执行任务</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer4</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Calendar calendar = Calendar.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    calendar.set(Calendar.HOUR_OF_DAY, <span class="number">9</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    calendar.set(Calendar.MINUTE, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    calendar.set(Calendar.SECOND, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Date time = calendar.getTime();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Timer timer = <span class="keyword">new</span> Timer();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    timer.scheduleAtFixedRate(<span class="keyword">new</span> TimerTask() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            System.out.println(<span class="string">"-------设定要指定任务--------"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;, time, <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);<span class="comment">// 这里设定将延时每天固定执行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>JFinal操作数据库的常用方法</title>
    <url>/archives/58250.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/73/wallhaven-733m6v.jpg" alt="General 1920x1080 cyberpunk futuristic weapon women"></p>
<a id="more"></a>

<h1 id="Model（ActiveRecord）"><a href="#Model（ActiveRecord）" class="headerlink" title="Model（ActiveRecord）"></a>Model（ActiveRecord）</h1><p>Model是ActiveRecord中最重要的组件之一，它充当MVC模式中的Model部分。以下是Model定义示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> User dao = <span class="keyword">new</span> User().dao();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>以上代码中的User通过继承Model，便立即拥有的众多方便的操作数据库的方法。在User中声明的dao静态对象是为了方便查询操作而定义的，该对象并不是必须的。基于ActiveRecord的Model无需定义属性，无需定义getter、setter方法，无需XML配置，无需Annotation配置，极大降低了代码量。</p>
<p>以下为Model的一些常见用法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建name属性为James,age属性为25的User对象并添加到数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> User().set(<span class="string">"name"</span>, <span class="string">"James"</span>).set(<span class="string">"age"</span>, <span class="number">25</span>).save();</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 删除id值为25的User</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">User.dao.deleteById(<span class="number">25</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 查询id值为25的User将其name属性改为James并更新到数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">User.dao.findById(<span class="number">25</span>).set(<span class="string">"name"</span>, <span class="string">"James"</span>).update();</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 查询id值为25的user, 且仅仅取name与age两个字段的值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">User user = User.dao.findByIdLoadColumns(<span class="number">25</span>, <span class="string">"name, age"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 获取user的name属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">String userName = user.getStr(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 获取user的age属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Integer userAge = user.getInt(<span class="string">"age"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 查询所有年龄大于18岁的user</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">List&lt;User&gt; users = User.dao.find(<span class="string">"select * from user where age&gt;18"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 分页查询年龄大于18的user,当前页号为1,每页10个user</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Page&lt;User&gt; userPage = User.dao.paginate(<span class="number">1</span>, <span class="number">10</span>, <span class="string">"select *"</span>, <span class="string">"from user where age &gt; ?"</span>, <span class="number">18</span>);</span></pre></td></tr></table></figure>

<blockquote>
<p><strong>特别注意：</strong></p>
<p><strong>User中定义的 public static final User dao对象是全局共享的，只能用于数据库查询，不能用于数据承载对象。</strong></p>
<p><strong>数据承载需要使用new User().set(…)来实现。</strong></p>
</blockquote>
<h1 id="独创-Db-Record-模式"><a href="#独创-Db-Record-模式" class="headerlink" title="独创 Db + Record 模式"></a>独创 Db + Record 模式</h1><p>Db类及其配套的Record类，提供了在Model类之外更为丰富的数据库操作功能。使用Db与Record类时，无需对数据库表进行映射，Record相当于一个通用的Model。以下为Db + Record模式的一些常见用法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建name属性为James,age属性为25的record对象并添加到数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Record user = <span class="keyword">new</span> Record().set(<span class="string">"name"</span>, <span class="string">"James"</span>).set(<span class="string">"age"</span>, <span class="number">25</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">Db.save(<span class="string">"user"</span>, user);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 删除id值为25的user表中的记录</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Db.deleteById(<span class="string">"user"</span>, <span class="number">25</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 查询id值为25的Record将其name属性改为James并更新到数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">user = Db.findById(<span class="string">"user"</span>, <span class="number">25</span>).set(<span class="string">"name"</span>, <span class="string">"James"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">Db.update(<span class="string">"user"</span>, user);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 获取user的name属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">String userName = user.getStr(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 获取user的age属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Integer userAge = user.getInt(<span class="string">"age"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 查询所有年龄大于18岁的user</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">List&lt;Record&gt; users = Db.find(<span class="string">"select * from user where age &gt; 18"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 分页查询年龄大于18的user,当前页号为1,每页10个user</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Page&lt;Record&gt; userPage = Db.paginate(<span class="number">1</span>, <span class="number">10</span>, <span class="string">"select *"</span>, <span class="string">"from user where age &gt; ?"</span>, <span class="number">18</span>);</span></pre></td></tr></table></figure>

<p><strong>获取 总记录数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> count = Db.queryLong(<span class="string">"select count(*) from blog"</span>);</span></pre></td></tr></table></figure>

<p><strong>插入 语句</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Db.update(<span class="string">"insert into ..."</span> )  <span class="comment">// 当然，如果不想写 sql ，还可以：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Record r = <span class="keyword">new</span> Record().set(...).set(...);</span></pre></td></tr><tr><td class="code"><pre><span class="line">Db.save(table, r);</span></pre></td></tr></table></figure>

<p><strong>事务处理</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> succeed = Db.tx(<span class="keyword">new</span> IAtom()&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       <span class="keyword">int</span> count = Db.update(<span class="string">"update account set cash = cash - ? where id = ?"</span>, <span class="number">100</span>, <span class="number">123</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">       <span class="keyword">int</span> count2 = Db.update(<span class="string">"update account set cash = cash + ? where id = ?"</span>, <span class="number">100</span>, <span class="number">456</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">       <span class="keyword">return</span> count == <span class="number">1</span> &amp;&amp; count2 == <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure>

<p>以上两次数据库更新操作在一个事务中执行，如果执行过程中发生异常或者run()方法返回false，则自动回滚事务。</p>
<h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><p><strong>（1）增、删、改、查对应于Db操作</strong><br>public boolean save()<br>public boolean delete()<br>public boolean update()</p>
<p>public List<M> find(String sql, Object… paras)</p>
<p>public M findFirst(String sql, Object… paras)<br>public Page<M> paginate(int pageNumber, int pageSize, String select, String sqlExceptSelect, Object… paras)</p>
<p><strong>（2）设置、取得字段对应于属性操作</strong></p>
<p>public M set(String attr, Object value)<br>public M put(String key, Object value)<br>public <T> T get(String attr)</p>
<p><strong>（3）Model独有操作</strong><br>public Record toRecord()</p>
<h2 id="Db"><a href="#Db" class="headerlink" title="Db"></a>Db</h2><p><strong>（1）增、删、改、查</strong><br>public static boolean save(String tableName, Record record)<br>public static boolean delete(String tableName, Record record)<br>public static boolean update(String tableName, Record record)<br>public static <T> List<T> query(String sql, Object… paras)<br>public static <T> T queryFirst(String sql, Object… paras)<br>public static List<Record> find(String sql, Object… paras)<br>public static Record findFirst(String sql, Object… paras)<br>public static Page<Record> paginate(int pageNumber, int pageSize, String select, String selectDistinct, String sqlExceptSelect, Object… paras)</p>
<p><strong>（2）Db独有操作</strong><br>public static boolean tx(IAtom atom)<br>public static Object execute(ICallback callback)<br>public static int[] batch(List<String> sqlList, int batchSize)<br>public static int[] batchSave(List&lt;? extends Model&gt; modelList, int batchSize)<br>public static int[] batchUpdate(List&lt;? extends Model&gt; modelList, int batchSize)</p>
<h2 id="Record"><a href="#Record" class="headerlink" title="Record"></a>Record</h2><p><strong>（1）设置、取得字段对应属性操作</strong><br>public Record set(String column, Object value)<br>public <T> T get(String column)</p>
<hr>
<p><strong>参考资料</strong>：    </p>
<p><a href="http://php-note.com/article/1489.html">JFinal 数据库 常用操作</a></p>
<p><a href="https://blog.csdn.net/u010087886/article/details/51423714">Jfinal数据库操作API总结</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JFinal</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之图片懒加载</title>
    <url>/archives/63242.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/39/wallhaven-3997d3.jpg" alt="People 2000x1125 Lenar Abdrakhmanov women model portrait face women with shades looking into the distance neon neon lights"></p>
<p>由于我的博客中插入了很多图片，所以导致页面加载的时候大部分时间都是在加载图片，严重的降低了用户体验，图片懒加载的出现很好的解决了这个问题。</p>
<a id="more"></a>

<h1 id="Lazyload介绍"><a href="#Lazyload介绍" class="headerlink" title="Lazyload介绍"></a>Lazyload介绍</h1><p><strong>hexo-lazyload-image</strong>是一个hexo插件，用于使所有图像自动支持lazyload。借助此功能，它将改善很多加载性能。</p>
<p>只有滚动到可视区域时才去请求资源，即只展示用户所看到部分的图片而非一次性加载所有图片。这样就能在一定程度上减少服务端的请求，也能加快主体文字内容的加载速度。</p>
<p>该插件的github项目地址：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">https://github.com/Troy-Yang/hexo-lazyload-image</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-lazyload-image-保存</span></pre></td></tr></table></figure>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>打开站点配置文件，增加以下内容：</p>
<p>复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lazyload:  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    enable: true   </span></pre></td></tr><tr><td class="code"><pre><span class="line">    onlypost: false  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    loadingImg: # eg &#x2F;images&#x2F;loading.gif</span></pre></td></tr></table></figure>

<p><strong>Onlypost</strong></p>
<ul>
<li>如果为true，则仅来自帖子或页面的图像将支持延迟加载。</li>
<li>如果为false，则网站的整个图像将使用延迟加载，包括与主题距离较远的图像，但不包括CSS样式的背景图像。</li>
</ul>
<p><strong>loadingImg</strong></p>
<ul>
<li>如果不设置任何值（默认情况下），则它将使用默认的加载图像。</li>
<li>如果要自定义图像，则需要将加载的图像复制到当前主题图像文件夹中，然后更改此路径以找到它。</li>
</ul>
<h1 id="生成并发布"><a href="#生成并发布" class="headerlink" title="生成并发布"></a>生成并发布</h1><p>接下来就可以发布了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d -g</span></pre></td></tr></table></figure>

<p>实现效果可以查看本站所有有图片的页面。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之双线部署到Coding Pages和Github Pages</title>
    <url>/archives/15060.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/lq/wallhaven-lqqdyp.jpg" alt="Anime 1306x900 anime anime girls short hair gun rain water weapon cyberpunk GUWEIZ girls with guns"></p>
<p>双线部署到Coding Pages和Github Pages可以解决Github国内访问慢和Coding易宕机的问题。</p>
<a id="more"></a>

<p>转载自：<strong>TRHX的博客文章：<a href="https://www.itrhx.com/2018/08/15/A02-hexo-blog/">TRHX’S BLOG</a>。</strong></p>
<h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p>进入 <a href="https://coding.net/">Coding 官网</a>，点击个人版登陆，没有账号就注册一个并登录，由于 Coding 已经被腾讯收购了，所以登录就会来到腾讯云开发者平台，点击创建项目<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/01.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/01.jpg" alt="01"></a></p>
<p>项目名称建议和你的用户名一致，这样做的好处是：到时候可以直接通过 <code>user_name.coding.me</code> 访问你的博客，如果项目名与用户名不一致，则需要通过 <code>user_name.coding.me/project_name</code> 才能访问，项目描述可以随便写<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/02.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/02.jpg" alt="02"></a></p>
<h1 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h1><p>配置 SSH 公钥方法与 GitHub Pages 的方式差不多，点击你的头像，依次选择【个人设置】-【SSH公钥】-【新增公钥】<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/03.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/03.jpg" alt="03"></a></p>
<p>前面部署到 GitHub Pages 的时候就已经有了一对公钥，我们直接将该公钥粘贴进去就行，公钥名称可以随便写，选中永久有效选项</p>
<p>PS：公钥储存位置一般在 C:\Users\用户名.ssh 目录下的 id_rsa.pub 文件里，用记事本打开复制其内容即可<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/04.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/04.jpg" alt="04"></a></p>
<p>添加公钥后，我们可以右键 <code>Get Bash</code>，输入以下命令来检查是否配置成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span></pre></td></tr></table></figure>

<p>若出现以下提示，则证明配置成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Coding 提示: Hello XXX, You&#39;ve connected to Coding.net via SSH. This is a personal key.XXX，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</span></pre></td></tr></table></figure>


<h1 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 _config.yml</h1><p>进入你的项目，在右下角有选择连接方式，选择 SSH 方式（HTTPS 方式也可以，但是这种方式有时候可能连接不上，SSH 连接不容易出问题），一键复制，然后打开你本地博客根目录的 <code>_config.yml</code> 文件，找到 <code>deploy</code> 关键字，添加 coding 地址：<code>coding: git@git.dev.tencent.com:user_name/user_name.git</code>，也就是刚刚复制的 SSH 地址<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/05.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/05.jpg" alt="05"></a><br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/06.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/06.jpg" alt="06"></a></p>
<p>添加完成后先执行命令 <code>hexo clean</code> 清理一下缓存，然后执行命令 <code>hexo g -d</code> 将博客双线部署到 Coding Pages 和 GitHub Pages，如下图所示表示部署成功：<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/13.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/13.jpg" alt="13"></a></p>
<h1 id="开启-Coding-Pages"><a href="#开启-Coding-Pages" class="headerlink" title="开启 Coding Pages"></a>开启 Coding Pages</h1><p>进入你的项目，在代码栏下选择 Pages 服务，一键开启 Coding Pages，等待几秒后刷新网页即可看到已经开启的 Coding Pages，到目前为止，你就可以通过 xxxx.coding.me（比如我的是 trhx.coding.me）访问你的 Coding Pages 页面了<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/07.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/07.jpg" alt="07"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/08.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/08.jpg" alt="08"></a></p>
<h1 id="绑定域名并开启-HPPTS"><a href="#绑定域名并开启-HPPTS" class="headerlink" title="绑定域名并开启 HPPTS"></a>绑定域名并开启 HPPTS</h1><p>首先在你的域名 DNS 设置中添加一条 CNAME 记录指向 xxxx.coding.me，解析路线选择默认，将 GitHub 的解析路线改为境外，这样境外访问就会走 GitHub，境内就会走 Coding，也有人说阿里云是智能解析，自动分配路线，如果解析路线都是默认，境外访问同样会智能选择走 GitHub，境内走 Coding，我没有验证过，有兴趣的可以自己试试，我的解析如下图所示：<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/09.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/09.jpg" alt="09"></a></p>
<p>然后点击静态 Pages 应用右上角的设置，进入设置页面，这里要注意，如果你之前已经部署到了 GitHub Pages 并开启了 HTTPS，那么直接在设置页面绑定你自己的域名，SSL/TLS 安全证书就会显示申请错误，如下图所示，没有申请到 SSL 证书，当你访问你的网站时，浏览器就会提示不是安全连接<a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/10.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/10.jpg" alt="10"></a></p>
<p>申请错误原因是：在验证域名所有权时会定位到 Github Pages 的主机上导致 SSL 证书申请失败</p>
<p>正确的做法是：先去域名 DNS 把 GitHub 的解析暂停掉，然后再重新申请 SSL 证书，大约十秒左右就能申请成功，然后开启强制 HTTPS 访问</p>
<p>这里也建议同时绑定有 www 前缀后没有 www 前缀的，然后设置其中一个为【首选】，另一个设置【跳转至首选】，这样不管用户是否输入 www 前缀都可以访问了</p>
<p>在博客资源引用的时候也要注意所有资源的 URL 必须是以 https:// 开头，不然浏览器依旧会提示不安全！<br><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/11_1.png"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/11_1.png" alt="11_1"></a></p>
<p>至此，我们的 Hexo 博客就成功双线部署到 Coding Pages 和 GitHub Pages 了，并且也实现了全站 HPPTS，最后来一张 GitHub Pages 和 Coding Pages 在国内的速度对比图，可以明显看到速度的提升<a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/12.jpg"><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A47/12.jpg" alt="12"></a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Github Pages和Hexo搭建自己的独立博客</title>
    <url>/archives/11099.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/zx/wallhaven-zxy9my.jpg" alt="General 1920x1080 Wang Ke concept art cyberpunk"></p>
<p>这是一篇有关如何使用 Github Pages 和 Hexo 搭建属于自己独立博客的详尽教程</p>
<a id="more"></a>

<p>转载自：<strong>TRHX的博客文章：<a href="https://www.itrhx.com/2018/08/15/A02-hexo-blog/">TRHX’S BLOG</a>。</strong></p>
<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><blockquote>
<p><strong>Github Pages</strong></p>
</blockquote>
<p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p>
<blockquote>
<p><strong>Hexo</strong></p>
</blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p><a href="https://nodejs.org/en/download/">点击此处</a>访问官网，按需下载相应版本，默认安装可以了</p>
<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/02.png" alt="02"></p>
<p>注：本人在安装过程中出现了Warning 1909,无法创建快捷方式，这种情况很少出现，如果在安装过程中也有这种情况请参考百度文库（win10系统实测可行）：<a href="https://wenku.baidu.com/view/4ad59110964bcf84b9d57ba5.html">《Win7安装程序警告1909无法创建快捷方式》</a></p>
<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/03.png" alt="03"></p>
<h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><p><a href="https://git-scm.com/download/win">点击此处</a>访问官网，按需下载相应版本，默认安装即可<br>参考资料：<a href="https://www.cnblogs.com/jytx/p/5602927.html">《如何在windows下安装GIT》</a> （By 俊雨廷休）<br>　　　　　<a href="http://git.oschina.net/progit/">《Pro Git（中文版）》</a></p>
<h1 id="检验软件是否安装成功"><a href="#检验软件是否安装成功" class="headerlink" title="检验软件是否安装成功"></a>检验软件是否安装成功</h1><p>同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项，第一个是图形界面的Git操作，另一个是命令行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git --version$ node -v$ npm -v</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/04.png" alt="04"></p>
<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/05.png" alt="05"></p>
<h1 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h1><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g$ npm install hexo-deployer-git --save</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/06.png" alt="06"></p>
<h1 id="Hexo-初始化配置"><a href="#Hexo-初始化配置" class="headerlink" title="Hexo 初始化配置"></a>Hexo 初始化配置</h1><p>在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\TRHX_Blog\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/07.png" alt="07"></p>
<p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/08.png" alt="08"></p>
<h1 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h1><p>执行以下命令，执行完即可登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo generate$ hexo server</span></pre></td></tr></table></figure>

<p>显示以下信息说明操作成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</span></pre></td></tr></table></figure>

<p>登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/09.png" alt="09"></p>
<h1 id="将博客部署到-Github-Pages-上"><a href="#将博客部署到-Github-Pages-上" class="headerlink" title="将博客部署到 Github Pages 上"></a>将博客部署到 Github Pages 上</h1><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上</p>
<p>一、注册 Github 账户：<a href="https://github.com/">点击此处</a>访问 Github 官网，点击 Sign Up 注册账户</p>
<p>二、创建项目代码库：点击 New repository 开始创建，步骤及注意事项见图：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/10.png" alt="10"></p>
<p>三、配置 SSH 密钥：只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\TRHX_Blog） Git Bash Here 输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email@example.com&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com</span></pre></td></tr></table></figure>

<p>之后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储</span></pre></td></tr></table></figure>

<p>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行Enter same passphrase again:</span></pre></td></tr></table></figure>

<p>接下来屏幕会显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span></pre></td></tr><tr><td class="code"><pre><span class="line">The key fingerprint is:</span></pre></td></tr><tr><td class="code"><pre><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱</span></pre></td></tr><tr><td class="code"><pre><span class="line">The key&#39;s randomart image is:</span></pre></td></tr><tr><td class="code"><pre><span class="line">这里也是各种字母数字符号组成的字符串</span></pre></td></tr></table></figure>

<p>运行以下命令，将公钥的内容复制到系统粘贴板上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span></pre></td></tr></table></figure>

<p>四、在 GitHub 账户中添加你的公钥</p>
<p>1.登陆 GitHub，进入 Settings：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/11.png" alt="11"></p>
<p>2.点击 SSH and GPG Keys：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/12.png" alt="12"></p>
<p>3.选择 New SSH key：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/13.png" alt="13"></p>
<p>4.粘贴密钥：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/14.png" alt="14"></p>
<p>五、测试</p>
<p>输入以下命令：注意：<a href="mailto:git@github.com">git@github.com</a>不要做任何更改！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span></pre></td></tr></table></figure>

<p>之后会显示：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/15.png" alt="15"></p>
<p>输入 yes 后会显示：<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/16.png" alt="16"><br>此时表示设置正确</p>
<p>六、配置 Git 个人信息</p>
<p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;此处填你的用户名&quot;$ git config --global user.email &quot;此处填你的邮箱&quot;</span></pre></td></tr></table></figure>

<p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p>
<h1 id="将本地的-Hexo-文件更新到-Github-的库中"><a href="#将本地的-Hexo-文件更新到-Github-的库中" class="headerlink" title="将本地的 Hexo 文件更新到 Github 的库中"></a>将本地的 Hexo 文件更新到 Github 的库中</h1><p>一、登录 Github 打开自己的项目 yourname.github.io<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/17.png" alt="17"></p>
<p>二、鼠标移到 Clone or download 按钮，选择 Use SSH<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/18.png" alt="18"></p>
<p>三、一键复制地址<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/19.png" alt="19"></p>
<p>四、打开你创建的 Hexo 文件夹（如：E:\TRHX_Blog\Hexo），右键用记事本（或者Notepad++、Vs Code等）打开该文件夹下的 _config.yml 文件<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/20.png" alt="20"></p>
<p>五、按下图修改 _config.yml 文件并保存<br><img src="/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/21.png" alt="21"></p>
<p>六、在 Hexo 文件夹下分别执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g$ hexo d</span></pre></td></tr></table></figure>



<p>或者直接执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g -d</span></pre></td></tr></table></figure>

<p>执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span></pre></td></tr></table></figure>

<p>需要执行以下命令再安装一次：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure>

<p>再执行 <code>hexo g -d</code>，你的博客就会部署到 Github 上了</p>
<p>七、访问博客</p>
<p>你的博客地址：https://你的用户名.github.io，比如我的是：<a href="https://trhx.github.io/">https://trhx.github.io</a> ，现在每个人都可以通过此链接访问你的博客了</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之Next主题加载优化性能提升</title>
    <url>/archives/6849.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/kw/wallhaven-kwr321.jpg" alt="head"></p>
<p>基于Github-pages搭建的Next主题的Hexo博客要怎么优化呢？</p>
<a id="more"></a>

<h3 id="主题源加载优化"><a href="#主题源加载优化" class="headerlink" title="主题源加载优化"></a>主题源加载优化</h3><p>把在NexT主题的_config.yml里面的：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"># <span class="built_in">Uri</span> of fonts host. E.g. <span class="comment">//fonts.googleapis.com (Default)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">host:</span></pre></td></tr></table></figure>

<p>改为：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"># <span class="built_in">Uri</span> of fonts host. E.g. <span class="comment">//fonts.googleapis.com (Default)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">host: <span class="comment">//fonts.lug.ustc.edu.cn</span></span></pre></td></tr></table></figure>

<p>因为<code>fonts.lug.ustc.edu.cn</code>是中科大的源，相比之前能快一下</p>
<h3 id="博客双线部署"><a href="#博客双线部署" class="headerlink" title="博客双线部署"></a>博客双线部署</h3><p><a href="https://www.ieclipse.cn/2016/08/29/Web/Hexo-deploy-lines/">参考文章地址</a></p>
<h3 id="压缩网页静态资源"><a href="#压缩网页静态资源" class="headerlink" title="压缩网页静态资源"></a>压缩网页静态资源</h3><p><a href="https://blog.csdn.net/lewky_liu/article/details/82432003">参考文章地址</a><br> <a href="https://github.com/rozbo/hexo-neat">hexo-neat插件github地址</a></p>
<p>常规的做法是使用<code>gulp</code>来进行压缩，每次压缩时还需要输入额外的命令，比较繁琐</p>
<h3 id="配置hexo-neat压缩插件"><a href="#配置hexo-neat压缩插件" class="headerlink" title="配置hexo-neat压缩插件"></a>配置hexo-neat压缩插件</h3><h4 id="在站点根目录下安装hexo-neat"><a href="#在站点根目录下安装hexo-neat" class="headerlink" title="在站点根目录下安装hexo-neat"></a>在站点根目录下安装hexo-neat</h4><p>博客目录下运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-neat --save</span></pre></td></tr></table></figure>

<p>如果报错，选择克隆插件，然后手动复制到插件目录里面<code>hexo目录\node_modules\</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/rozbo/hexo-neat</span></span></pre></td></tr></table></figure>

<h4 id="站点配置文件添加相关配置"><a href="#站点配置文件添加相关配置" class="headerlink" title="站点配置文件添加相关配置"></a>站点配置文件添加相关配置</h4><p>配置信息添加到博客目录文件夹下的<code>hexo目录\_config.yml</code>的末尾，可以安装自己的需求去自定义配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-neat</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 博文压缩</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">neat_enable: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">neat_html:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  exclude:</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩css  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">neat_css:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  exclude:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/*.min.css'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">neat_js:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  mangle: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  output:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  compress:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  exclude:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/*.min.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/jquery.fancybox.pack.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/index.js'</span></span></pre></td></tr></table></figure>

<h3 id="报错及相应解决"><a href="#报错及相应解决" class="headerlink" title="报错及相应解决"></a>报错及相应解决</h3><p><a href="https://blog.csdn.net/dataiyangu/article/details/84963491">参考文章地址</a></p>
<h4 id="跳过压缩文件的正确配置方式"><a href="#跳过压缩文件的正确配置方式" class="headerlink" title="跳过压缩文件的正确配置方式"></a>跳过压缩文件的正确配置方式</h4><p>如果按照官方插件的文档说明来配置exclude，你会发现完全不起作用。这是因为配置的文件路径不对，压缩时找不到你配置的文件，自然也就无法跳过了。你需要给这些文件指定正确的路径，万能的配置方式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">neat_css:</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">exclude:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/*.min.css'</span></span></pre></td></tr></table></figure>

<h4 id="压缩html时不要跳过-md文件"><a href="#压缩html时不要跳过-md文件" class="headerlink" title="压缩html时不要跳过.md文件"></a>压缩html时不要跳过.md文件</h4><p>.md文件就是我们写文章时的markdown文件，如果跳过压缩.md文件，而你又刚好在文章中使用到了NexT自带的tab标签，那么当hexo在生成静态页面时就会发生解析错误。这会导致使用到了tab标签的页面生成失败而无法访问。</p>
<h4 id="压缩html时不要跳过-swig文件"><a href="#压缩html时不要跳过-swig文件" class="headerlink" title="压缩html时不要跳过.swig文件"></a>压缩html时不要跳过.swig文件</h4><p>.swig文件是模板引擎文件，简单的说hexo可以通过这些文件来生成对应的页面。如果跳过这些文件，那么你将会发现，你的所有页面完全没有起到压缩的效果，页面源代码里依然存在着一大堆空白。</p>
<h4 id="点击的桃心效果消失"><a href="#点击的桃心效果消失" class="headerlink" title="点击的桃心效果消失"></a>点击的桃心效果消失</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">neat_js:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  mangle: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  output:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  compress:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  exclude:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/*.min.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/jquery.fancybox.pack.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/index.js'</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - <span class="string">'**/love.js'</span></span></pre></td></tr></table></figure>

<p>gitalk js文件报错<br> 在上面的代码底部加入如下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- <span class="string">'**/comments.gitalk.js'</span></span></pre></td></tr></table></figure>

<h4 id="jquery-pjax-min-js报错"><a href="#jquery-pjax-min-js报错" class="headerlink" title="jquery pjax min js报错"></a>jquery pjax min js报错</h4><p>我这里的 jquery pjax min js是指的加入pjax前需要以来的两个cdn文件，一个是jq，一个是它，我将它下载到了本地，不要在意这些细节~<br> 同样加入如下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- <span class="string">'**/jquery_pjax_min_js.js'</span></span></pre></td></tr></table></figure>


<h3 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h3><p><a href="http://www.zhaojun.im/hexo-lazyload/">参考文章地址</a></p>
<p>懒加载，在需要的时候才加载图片，而不是一次性加载完整个页面的图片<br> 使用<code>lazyload</code>插件，适用于本地图片很多的情况</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在<code>Hexo</code>博客目录下，执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload --save</span></pre></td></tr></table></figure>

<p>然后在你的 <code>Hexo</code>目录的配置文件 <code>_config.yml</code> 中添加配置:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lazyload:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment"># className: #可选 e.g. .J-lazyload-img</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment"># loadingImg: #可选 eg. ./images/loading.png</span></span></pre></td></tr></table></figure>

<p>参数：<br> <code>loadingImg</code> - 图片未加载时的代替图</p>
<p>默认路径: <code>/js/lazyload-plugin/loading.svg</code><br> 如果需要自定义，添填入 <code>loading</code> 图片地址，如果是本地图片，不要忘记把图片添加到你的主题目录下。</p>
<p><code>className</code> - 需要延迟加载的图片 <code>class</code>选择器</p>
<p>默认会延迟加载文章中的所有图片。<br> 如果不为空，请填入需要延迟加载的图片<code>class</code> 选择器</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客优化之解决国外域名在国内访问慢的问题</title>
    <url>/archives/4730.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/lq/wallhaven-lqlk7q.png" alt="Anime 1920x1080 Ghost in the Shell Kusanagi Motoko Motoko Kusanagi anime Major cyberpunk cyborg"></p>
<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>目前我使用的是国外域名<strong>NameSilo</strong>，由于是直接使用的域名注册商的解析，所以会出现在国内直接访问的话，打开速度慢的问题，所以我们需要将<strong>NameSilo</strong>域名解析到DNSPod，以提升访问速度。</p>
<a id="more"></a>

<h2 id="注册DNSPod账号"><a href="#注册DNSPod账号" class="headerlink" title="注册DNSPod账号"></a>注册DNSPod账号</h2><p> 在<a href="https://www.dnspod.cn/">DNSPod官网</a>注册账号 ，进行登录，选择<strong>DNS管理</strong>下的<strong>我的域名</strong>，点击添加域名，添加之前购买的<strong>NameSilo</strong>域名，然后确定。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/eTsnxFuVtaQBgNJ.png" alt="image.png"></p>
<p>添加之后点击添加的域名，会看到DNSPod提供的两条默认的NS记录</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/LXjtJf41kqiWrKa.png" alt="image.png"></p>
<h2 id="修改Namesilo"><a href="#修改Namesilo" class="headerlink" title="修改Namesilo"></a>修改Namesilo</h2><p> 登录我们的<strong>Namesilo</strong>，选择Manage My Domains，进入域名管理页面。勾选你的域名，点击选项栏中的Change Nameservers。</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/Dzn2uw68QdGpesX.png" alt="image.png"></p>
<p> 将 <strong>NameServer 1</strong>， <strong>NameServer 2</strong> 改为DNSPod提供的两条NS记录，删除第三条NS记录，点击提交。 </p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/pSVWfbYRimzn1kB.png" alt="image.png"></p>
<p>打开Namesilo的DNS<a href="https://www.namesilo.com/account_domain_manage_dns.php">管理页面</a> 删除默认的A记录和CNAME记录 。</p>
<p><strong>NameServer</strong> 的修改需要一段时间，会在一到48小时生效 。</p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p> 打开Git Bash或cmd命令行控制台，输入： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping yourname.github.io</span></pre></td></tr></table></figure>

<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/yoE1szkZWI9Kvtx.png" alt="image.png"></p>
<p> 返回结果为自己博客站点的IP地址。 </p>
<p>登录进入DNSPod的域名控制台，选择要解析的域名，添加如下解析内容： </p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/18/T62mja5yRVCMnuL.png" alt="image.png"></p>
<p> 解析时，记录类型选A或CNAME，A记录的记录值为上一步得到的IP地址，CNAME记录的记录值为你的Github Pages博客域名。同时添加两条记录可保证无论是否添加www都可以访问。</p>
<p>最后只要等待 DNSPOD 的DNS解析和 Namesilo 的NameServer生效后即可使用。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>解决json的value中含有双引号导致解析错误的问题</title>
    <url>/archives/57064.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/lq/wallhaven-lqgoml.jpg" alt="General 1920x1114 motorcycle cityscape street light street Asian Asia women lights cyberpunk futuristic reflection night digital art cyan neon lights"> </p>
<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>在爬虫中经常会遇到一下json格式的数据需要进行解析，但是如果这段json中value中含有双引号的话就会导致解析错误，报错遗漏数据的情况。</p>
<a id="more"></a>

<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>出现这种情况的话最好的办法当然是从源头进行解决，比如对value中的双引号进行转义或者替换成中文状态下的双引号进行解决，如果是其他场景比如是通过单位同事传过来的json数据的话，就可以让同事传的时候进行处理一下。</p>
<p>但是如果数据是通过爬虫采集回来的话就不能从源头处理了，只能自己进行二次处理。</p>
<p>下面的就是因为value中含有双引号导致的JsonPath解析错误</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.jayway.jsonpath.InvalidJsonException: net.minidev.json.parser.ParseException: Unexpected token 中 at position <span class="number">411</span>.</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at com.jayway.jsonpath.spi.json.JsonSmartJsonProvider.parse(JsonSmartJsonProvider.java:<span class="number">64</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at com.jayway.jsonpath.internal.ParseContextImpl.parse(ParseContextImpl.java:<span class="number">37</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at com.jayway.jsonpath.JsonPath.parse(JsonPath.java:<span class="number">599</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at casia.isiteam.hongkong_forum.service.HongKongTask.run(HongKongTask.java:<span class="number">72</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at java.lang.Thread.run(Thread.java:<span class="number">745</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Caused by: net.minidev.json.parser.ParseException: Unexpected token 中 at position <span class="number">411</span>.</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readObject(JSONParserBase.java:<span class="number">567</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readMain(JSONParserBase.java:<span class="number">403</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readArray(JSONParserBase.java:<span class="number">273</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readMain(JSONParserBase.java:<span class="number">406</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readObject(JSONParserBase.java:<span class="number">546</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readMain(JSONParserBase.java:<span class="number">403</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readObject(JSONParserBase.java:<span class="number">546</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readMain(JSONParserBase.java:<span class="number">403</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readObject(JSONParserBase.java:<span class="number">546</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.readFirst(JSONParserBase.java:<span class="number">301</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserBase.parse(JSONParserBase.java:<span class="number">158</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParserString.parse(JSONParserString.java:<span class="number">58</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at net.minidev.json.parser.JSONParser.parse(JSONParser.java:<span class="number">271</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        at com.jayway.jsonpath.spi.json.JsonSmartJsonProvider.parse(JsonSmartJsonProvider.java:<span class="number">62</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ... <span class="number">4</span> more</span></pre></td></tr></table></figure>

<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>可以通过以下方法进行处理一下，通过把value中的双引号替换成中文状态的双引号进行解决，如果你有更好的解决方法，欢迎评论与我分享！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">jsonString</span><span class="params">(String s)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">char</span>[] temp = s.toCharArray();		</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">int</span> n = temp.length;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n;i++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">if</span>(temp[i]==<span class="string">':'</span>&amp;&amp;temp[i+<span class="number">1</span>]==<span class="string">'"'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">						<span class="keyword">for</span>(<span class="keyword">int</span> j =i+<span class="number">2</span>;j&lt;n;j++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">							<span class="keyword">if</span>(temp[j]==<span class="string">'"'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">								<span class="keyword">if</span>(temp[j+<span class="number">1</span>]!=<span class="string">','</span> &amp;&amp;  temp[j+<span class="number">1</span>]!=<span class="string">'&#125;'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">									temp[j]=<span class="string">'”'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">								&#125;<span class="keyword">else</span> <span class="keyword">if</span>(temp[j+<span class="number">1</span>]==<span class="string">','</span> ||  temp[j+<span class="number">1</span>]==<span class="string">'&#125;'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">									<span class="keyword">break</span> ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">								&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">							&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">						&#125;	</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;		</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> String(temp);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>json</tag>
        <tag>疑难问题</tag>
      </tags>
  </entry>
  <entry>
    <title>解决远程桌面无法拷贝文件的问题</title>
    <url>/archives/16488.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/4y/wallhaven-4yzv5d.jpg" alt="General 2931x1430 face fantasy art cyberpunk Maciej Kuciara"></p>
<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>今天在通过系统自带的远程桌面备份ADSL机器上的程序的时候遇到有一台机器在远程的机器什么互相拷贝问题是没有问题的，只是不能通过远程机器拷贝到本地！解决之后记录一下方法。</p>
<a id="more"></a>

<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h4 id="检查本地"><a href="#检查本地" class="headerlink" title="检查本地"></a>检查本地</h4><p>​    首先需要检查远程桌面链接的剪切板设置是否开启</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/13/I6HbOhXncxsd1k4.png" alt="image.png"></p>
<h4 id="检查服务器"><a href="#检查服务器" class="headerlink" title="检查服务器"></a>检查服务器</h4><p>​    打开任务管理器，重启<strong>rdpclip.exe进程</strong></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/13/Bj5tlENVXm2FIGZ.png" alt="image.png"></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/13/l1yEsxmdrGU286e.png" alt="image.png"></p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/11/13/pCd7s2J1WNUmo8t.png" alt="image.png"></p>
<p>重启完<strong>rdpclip.exe进程</strong>问题就解决了，可以继续工作了。</p>
]]></content>
      <tags>
        <tag>疑难问题</tag>
      </tags>
  </entry>
  <entry>
    <title>东京压缩</title>
    <url>/archives/37760.html</url>
    <content><![CDATA[<p> <img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/48/wallhaven-483d6y.jpg" alt="动漫1600x1074地铁火车站动漫"> </p>
<p> &emsp;  &emsp; 德国出生的摄影师Michael Wolf认为乘坐东京地铁太过拥挤，犹如一场噩梦，他常常看到因为车厢人太多，乘客的脸被挤到贴着玻璃，十分恐怖。Michael以此为灵感，创作了一组摄影作品，名为“东京压缩”（Tokyo compression ）。 </p>
<a id="more"></a>

<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638733513_3377314736818010852.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638733572_7069221447340987798.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638733580_2438716151345937923.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638737753_8766706081247849810.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/2e53388c85a4427f85bb96e9207e46e3_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638737800_17020954063596027083.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://travel.cntv.cn/20121123/images/1353638737808_13932521147299976870.jpg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/8187487d0b484ca2a537020b2acc94c1_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/5f81242f7e8d44f28d285a3b1457f3f3_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/03b05e5b21f74c4b8a023975d45465a8_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/e0199a0571784c6ab349ae9d1622ee1f_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/d64dc6fe225e457ba41bb1edb00ea4bf_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/7858e6f314004ce6a482e0cf6ef0a058_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/6faa926a13a64256a49adb3ff034850c_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/3909030629a44019b63c52626a137854_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/12fafa87f1c648cd9c786e5a6962911c_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/8bb4857e5dde4b4580512185f9908c85_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/1dfcccd9f89c4d119053a1578e6299bd_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/a5492b78c10e472d872a0b7045a084a8_th.jpeg" alt="img"> </p>
<p> <img src="/images/loading.gif" data-original="http://img.mp.itc.cn/upload/20170407/c8c6166d7f654b7c8ee8b78ab49cd71a_th.jpeg" alt="img"> </p>
<p>想起了被昌平线支配的恐惧。。。</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>使用轻量级工具处理emoji表情</title>
    <url>/archives/6686.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/zm/wallhaven-zmvgkj.jpg" alt="封面"></p>
<p><strong>场景：</strong>在爬虫工作中经常会遇到带有emoji表情的数据，存入到MySQL库的时候会出错，当然可以通过更改表的编码为 ‘<em>utf8mb4</em>’ 解决问题，但是大部分时间是不允许直接更改数据库的，所以就需要进行转换一下。</p>
<a id="more"></a>

<blockquote>
<p> github地址：<a href="https://github.com/vdurmont/emoji-java">https://github.com/vdurmont/emoji-java</a> </p>
</blockquote>
<h3 id="获取maven依赖"><a href="#获取maven依赖" class="headerlink" title="获取maven依赖"></a>获取maven依赖</h3><p>目前该工具最新版本是4.0.0，依赖如下： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;groupId&gt;com.vdurmont&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;artifactId&gt;emoji-java&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;version&gt;5.1.1&lt;&#x2F;version&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure>

<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="To-aliases（把表情转换成别名）"><a href="#To-aliases（把表情转换成别名）" class="headerlink" title="To aliases（把表情转换成别名）"></a>To aliases（把表情转换成别名）</h4><p>To replace all the emoji’s unicodes found in a string by their aliases, use <code>EmojiParser#parseToAliases(String)</code>.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"An 😀awesome 😃string with a few 😉emojis!"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">String result = EmojiParser.parseToAliases(str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">System.out.println(result);</span></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;An :grinning:awesome :smiley:string with a few :wink:emojis!&quot;</span></pre></td></tr></table></figure>

<h4 id="To-html（把表情转换成html-可以直接在前端显示）"><a href="#To-html（把表情转换成html-可以直接在前端显示）" class="headerlink" title="To html（把表情转换成html,可以直接在前端显示）"></a>To html（把表情转换成html,可以直接在前端显示）</h4><p>To replace all the emoji’s unicodes found in a string by their html representation, use <code>EmojiParser#parseToHtmlDecimal(String)</code>or <code>EmojiParser#parseToHtmlHexadecimal(String)</code>. </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"An 😀awesome 😃string with a few 😉emojis!"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">String resultDecimal = EmojiParser.parseToHtmlDecimal(str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">System.out.println(resultDecimal);</span></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;An &amp;#128512;awesome &amp;#128515;string with a few &amp;#128521;emojis!&quot;</span></pre></td></tr></table></figure>

<h4 id="To-unicode-把表情的别名或者HTML转成表情"><a href="#To-unicode-把表情的别名或者HTML转成表情" class="headerlink" title="To unicode(把表情的别名或者HTML转成表情)"></a>To unicode(把表情的别名或者HTML转成表情)</h4><p>To replace all the aliases and the html representations found in a string by their unicode, use <code>EmojiParser#parseToUnicode(String)</code>. </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"An :grinning:awesome :smiley:string &amp;#128516;with a few :wink:emojis!"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">String result = EmojiParser.parseToUnicode(str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">System.out.println(result);</span></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;An 😀awesome 😃string 😄with a few 😉emojis!&quot;</span></pre></td></tr></table></figure>

<h4 id="Remove-emojis-移除所有emoji表情"><a href="#Remove-emojis-移除所有emoji表情" class="headerlink" title="Remove emojis( 移除所有emoji表情 )"></a>Remove emojis( 移除所有emoji表情 )</h4><p><code>EmojiParser#removeAllEmojis(String)</code>: removes all the emojis from the String</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"An 😀awesome 😃string with a few 😉emojis!"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">System.out.println(EmojiParser.removeAllEmojis(str));</span></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;An awesome string with a few emojis!&quot;</span></pre></td></tr></table></figure>

<h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>文中只列出了部分的功能方法，还有更多方法比如，<em>选择性的移除</em>或者<em>从字符串中提取表情符号</em>等功能，就留给大家自己探索了</p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>emoji</tag>
        <tag>spider</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法介绍</title>
    <url>/archives/3313.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/wy/wallhaven-wyw8wr.jpg" alt="封面"></p>
<p><em>原文博客地址</em>：<a href="https://github.com/younghz/Markdown#1-markdown是什么">Markdown语法</a></p>
<h3 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1. Markdown是什么？"></a>1. Markdown是什么？</h3><p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br><strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>
<a id="more"></a>

<h3 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2. 谁创造了它？"></a>2. 谁创造了它？</h3><p>它由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/亚伦·斯沃茨">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p>
<p>他有着足以让你跪拜的人生经历：</p>
<ul>
<li><strong>14岁</strong>参与RSS 1.0规格标准的制订。</li>
<li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。</li>
<li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人。</li>
<li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li>
<li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li>
<li><strong>2013</strong>年1月自杀身亡。</li>
</ul>
<p><a href="https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg"><img src="/images/loading.gif" data-original="https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg" alt="Aaron Swartz"></a></p>
<p>天才都有早逝的归途。</p>
<h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. 为什么要使用它？</h3><ul>
<li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>跨平台使用。</li>
<li>越来越多的网站支持Markdown。</li>
<li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li>
<li>摆脱Word（我不是认真的）。</li>
</ul>
<h3 id="4-怎么使用？"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. 怎么使用？</h3><p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>
<p>Markdown语法主要分为如下几大部分： <strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code></strong>，<strong>符号’`’</strong>。</p>
<h4 id="4-1-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>
<blockquote>
<p>一级标题<br><code>=========</code><br>二级标题<br><code>---------</code></p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote>
<p>2）使用<code>#</code>，可表示1-6级标题。</p>
<blockquote>
<p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题</p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote>
<h4 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<h4 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>
<blockquote>
<p>&gt; 区块引用<br>&gt;&gt; 嵌套引用</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p>区块引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
<h4 id="4-4-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p>
<p>void main()<br>{<br>printf(“Hello, Markdown.”);<br>}</p>
<p>代码区块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void main()</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    printf(&quot;Hello, Markdown.&quot;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><strong>注意</strong>:需要和普通段落之间存在空行。</p>
<h4 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>
<blockquote>
<p><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong></p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><em>斜体<em>，</em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong></p>
</blockquote>
<h4 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>
<blockquote>
<p>-（+<em>） 第一项 -（+</em>） 第二项 - （+*）第三项</p>
</blockquote>
<p><strong>注意</strong>：标记后面最少有一个_空格<em>或</em>制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p>
<p>效果：</p>
<blockquote>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
</blockquote>
<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>
<blockquote>
<p>1 . 第一项<br>2 . 第二项<br>3 . 第三项</p>
</blockquote>
<p>效果：</p>
<blockquote>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
</blockquote>
<h4 id="4-7-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>
<h4 id="4-8-链接"><a href="#4-8-链接" class="headerlink" title="4.8 链接"></a>4.8 链接</h4><p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br><strong>行内式</strong>：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库</a>。</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https://github.com/younghz/://github.com/younghz/Markdown">younghz的Markdown库</a>。</p>
</blockquote>
<p><strong>参考式</strong>：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库1</a><br><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库2</a></p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https://github.com/younghz/://github.com/younghz/Markdown">younghz的Markdown库1</a><br><a href="https://github.com/younghz/://github.com/younghz/Markdown">younghz的Markdown库2</a></p>
</blockquote>
<p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>
<h4 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>
<h4 id="4-10-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠<code>\</code></h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>
<h4 id="4-11-符号’-’"><a href="#4-11-符号’-’" class="headerlink" title="4.11 符号’`’"></a>4.11 符号’`’</h4><p>起到标记作用。如：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl+a</span></pre></td></tr></table></figure>
</blockquote>
<p>效果：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl+a</span></pre></td></tr></table></figure>
</blockquote>
<h4 id="5-谁在用？"><a href="#5-谁在用？" class="headerlink" title="5. 谁在用？"></a>5. <em>谁</em>在用？</h4><p>Markdown的使用者：</p>
<ul>
<li>GitHub</li>
<li>简书</li>
<li>Stack Overflow</li>
<li>Apollo</li>
<li>Moodle</li>
<li>Reddit</li>
<li>等等</li>
</ul>
<h4 id="6-尝试一下"><a href="#6-尝试一下" class="headerlink" title="6. 尝试一下"></a>6. 尝试一下</h4><ul>
<li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li>
<li><strong>在线</strong>的dillinger.io评价也不错</li>
<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li>
<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li>
<li><strong>Linux</strong>下的ReText不错。</li>
</ul>
<p><strong>当然，最终境界永远都是笔下是语法，心中格式化 :)。</strong></p>
<hr>
<p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。 虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber] (<a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</a> )。</p>
<hr>
<p>以上基本是所有traditonal markdown的语法。</p>
<h3 id="其它："><a href="#其它：" class="headerlink" title="其它："></a>其它：</h3><p>列表的使用(非traditonal markdown)：</p>
<p>用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p>
<table>
<thead>
<tr>
<th>代码库</th>
<th>链接</th>
</tr>
</thead>
<tbody><tr>
<td>MarkDown</td>
<td><a href="https://github.com/younghz/Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
<tr>
<td>MarkDownCopy</td>
<td><a href="https://github.com/younghz/Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
</tbody></table>
<p>关于其它扩展语法可参见具体工具的使用说明。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>markdown</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下vi和vim有什么区别</title>
    <url>/archives/6014.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/md/wallhaven-mdlew8.jpg" alt="通用1920x877赛博朋克自行车女性亚洲未来派科幻小说粉红色硕"></p>
<p> *<em>vim是vi的增强版，完全兼容vi。vim优势主要体现在以下几个方面:  *</em></p>
<a id="more"></a>

<ol>
<li>多级撤消<br>我们知道在vi里，按u只能撤消上次命令，而在vim里可以无限制的撤消。</li>
<li>易用性<br>vi只能运行于unix类中，而vim不仅可以运行 于unix,windows ,mac等多操作平台。</li>
<li>语法加亮<br>vim可以用不同的颜色来加亮你的代码。</li>
<li>可视化操作<br>就是说vim不仅可以在终端运行，也可以运行于x window、 mac os、 windows。</li>
<li>对vi的完全兼容<br>某些情况下，你可以把vim当成vi来使用。</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text添加到鼠标右键菜单的教程方法</title>
    <url>/archives/1663.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/p2/wallhaven-p2zve9.jpg" alt="General 1920x1080 digital art women futuristic fantasy art sword smoke Antoine Collignon fantasy girl cyberpunk ArtStation"></p>
<p><strong>情景</strong>：我们在安装的 Sublime Text 后发现没有右键菜单 ， 打开一些文件不是很方便 ， 下面是我的方法，希望有所帮助！</p>
<a id="more"></a>

<ol>
<li><p>win+R打开运行，输入regedit ，确定，打开注册表</p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/10/30/jMV1KXmpDYtSJkv.png" alt="未命名1572450399.png"></p>
</li>
<li><p>依次找到HKEY_CLASSESS_ROOT-&gt;*-&gt;Shell，下面新建项，命名为sublime Text。 </p>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/10/30/ZKwgMSDzip3LVRu.png" alt="新建项"></p>
</li>
<li><p>然后点击新建的项sublime Text，双击默认设置数值数据为：用Sublime Text打开，再右键新建字符串命名为Icon，设置数值数据为：Sublime的路径 + ,0</p>
<img src="/images/loading.gif" data-original="https://i.loli.net/2019/10/30/KM2Y8WtRyINslwL.png" alt="image.png" style="zoom:80%;" />
</li>
<li><p>在左边的sublime Text下面新建一个项，命名为Command，然后点击Command，把右边默认的数值数据设置为：Sublime的路径 + %1</p>
<img src="/images/loading.gif" data-original="https://i.loli.net/2019/10/31/FxLb5gEuyXHPGVs.png" alt="image.png" style="zoom:80%;" />
</li>
<li><p>到这里就设置完成了，关闭注册表，找个文件测试一下吧！</p>
</li>
</ol>
<p><img src="/images/loading.gif" data-original="https://i.loli.net/2019/10/31/DgtCKQbIsB8j7mM.png" alt="image.png"></p>
<hr>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/archives/16107.html</url>
    <content><![CDATA[<p><img src="/images/loading.gif" data-original="https://w.wallhaven.cc/full/kw/wallhaven-kwzgld.jpg" alt="General 1920x1115 cyberpunk digital science fiction futuristic Hong Kong vehicle gun"></p>
<p>首先，恭喜自己有了一个属于自己的博客 , 哈哈 !</p>
<a id="more"></a>

<p>本人是一位在北漂的苦逼爬虫程序员(建议其他程序员不要走这条路 , 太坑了 , 稍有不慎还容易进去) , 之前也有在新浪博客和CSDN上面写过博客 , 当时体验都不是很好 , 终于经过这几天的折腾自己搭建了一个博客 , 域名还没有想好 , 后面想好了再弄 。</p>
<p>个人觉得每个程序员都应该有一个属于自己的博客，一个是对知识点和工作中遇到的坑进行整理，再一个有一个自己的博客在面试的时候也是一个很好的加分项，所以建一个自己的博客，并且进行认真的打理还是很有必要的，让我们为了更加美好的明天而努力吧，加油。</p>
<hr>
]]></content>
  </entry>
</search>
